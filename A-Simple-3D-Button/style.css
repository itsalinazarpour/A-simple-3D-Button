 body{
     background-image: url(1.jpg);
     background-repeat: no-repeat;
     text-align: center;
     background-size: cover;
     position: relative;}
   
 h1, h2{
     margin: 85px;
     text-shadow: 2px 3px 5px white;
     font-size: 40px;
 }
 
 .button {
    position: relative;
    background:transparent;
    /* the background of the button */
    border: none;
    padding: 0;
    cursor: pointer;
    margin-top: 10px;
  }
  .shadow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 12px;
    background: hsl(0deg 0% 0% / 0.25);
    /* transform: translateY(2px); 
    The translateY() CSS function 
    repositions an element vertically on the 2D plane. 
    Note: translateY(ty) is equivalent to translate(0, ty) or translate3d(0, ty, 0)  */
    transform: translate3d(0, ty, 0);
  }
  .edge {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 12px;
    background: hsl(340deg 100% 32%);
  }
  .front {
    display: block;
    position: relative;
    padding: 12px 42px;
    border-radius: 12px;
    font-size: 1.25rem;
    color:white;
    background: hsl(345deg 100% 47%);
    transform: translateY(-4px);
  }
  
/* .button:hover means 
how the situation of each part 
is going to change when 
the button is hovered */

  .button:hover .front {
    transform: translateY(-9px);
    /* the more the number, the higher the button (itself) goes when hoverd */
  }
  .button:hover .shadow {
    transform: translateY(8px);
    /* the higher the number, the lower the grey shadow moves when hovered */
    
  }
  .button:active .front {
    transform: translateY(-2px);
    /* here the minus 2 means the movment of the front layer. 
    -1 will make it collapsed on the layers while -2 
    is a little upper so that you can still see the edge.
     - up
     + down */

  }
  .button:active .shadow {
    transform: translateY(1px);
  }
  
  .button:focus:not(:focus-visible) {
    outline: none;
  }
  /* :focus:not(:focus-visible) { outline: none }
   Gets rid of the annoying outline for mouse users but preserves it for keyboard users. */